{"version":3,"sources":["Components/Spinner.js","Components/Meme.js","Components/Header.js","Components/SwaggerButton.js","App.js","reportWebVitals.js","index.js"],"names":["Spinner","className","Meme","Loading","useState","undefined","Memes","setMemes","Limit","setLimit","Fetching","setFetching","Error","setError","Message","setMessage","updating","Last","useEffect","fetch","method","redirect","then","response","json","result","reverse","catch","error","console","log","setTimeout","class","style","color","fontWeight","length","map","items","index","name","caption","src","url","alt","display","justifyContent","alignItems","height","flexDirection","background","borderRadius","overflow","onClick","Header","SwaggerButton","href","App","Name","setName","Caption","setCaption","Image","setImage","setLoading","onSubmit","e","preventDefault","myHeaders","Headers","append","requestOptions","headers","body","JSON","stringify","htmlFor","for","type","placeholder","id","required","value","onChange","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e7bfad0.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Spinner() {\n    return (\n        <div className=\"loader\"></div>\n    )\n}\n\nexport default Spinner\n","import React ,{useState,useEffect}from 'react'\nimport Spinner from './Spinner'\nconst Backend_URL='https://ritikajain120600.pythonanywhere.com/'\nfunction Meme({Loading}) {\n    const [Memes,setMemes]=useState(undefined)\n    const [Limit,setLimit]=useState(100)\n    const [Fetching,setFetching]=useState(false)\n    const [Error,setError]=useState(false)\n    const [Message,setMessage]=useState('')\n    const [updating,setupdating]=useState(false)\n    const [Last,IsLast]=useState(false)\n\n    useEffect(()=>{\n        var requestOptions = {\n        method: 'GET',\n        redirect: 'follow'\n        };\n        setFetching(true)\n        fetch(`${Backend_URL}memes?limit=${Limit}`, requestOptions)\n        .then(response => response.json())\n        .then(result => {\n            result.reverse()\n            setMemes(result)\n            setFetching(false)\n        })\n        .catch(error => console.log('error', error));\n    },[Loading,Limit])\n  \n  useEffect(()=>{\n    setTimeout(()=>{\n        setMessage('')\n        setError(false)\n    },2000)\n  },[updating])\n\n  \n    return (\n    <div class=\"container\">\n        <div>\n            <div className=\"text-center\">\n                <p style={Error?{color:'red', fontWeight: 'bold'}:{color:'green', fontWeight: 'bold'}}> {Message}</p>\n            </div>\n            {\n                Memes?\n                <>\n                    {\n                        Memes.length>0?\n                        <>\n                        {\n                            <div className=\"row\">\n                                {Memes.map((items,index)=>{\n                                    return(\n                                        <div className=\"col-lg- card\" key={index} >\n                                            <div className=\"card-body\">\n                                                <div >\n                                                <h5 className=\"card-title\">{items.name}</h5>\n                                                </div>\n                                                <p className=\"card-text\">{items.caption}</p>\n                                                <img src={items.url} className=\"card-img-top\" alt=\" Not available\"/>\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                            </div>}\n                        }\n                        </>\n                        :\n                        <div style={{display:'flex',justifyContent:'center',alignItems:'center',height:'200px',flexDirection:'column',color:'#000',background:'#fff',borderRadius:'20px',}}>\n                        <p>No Memes uploaded</p>\n                        <p>(Be the first one to upload {':)'})</p>\n                        </div>\n                    }\n                </>\n                :\n                <div style={{display:'flex',justifyContent:'center',alignItems:'center',height:'200px',background:'#fff',borderRadius:'20px',flexDirection:'column',overflow:'hidden'}}>\n                    <Spinner/>\n                    <br/>\n                    <h3 style={{overflow:'hidden'}}>Loading...</h3>\n                </div>\n            }\n            <br/>\n            {\n                Memes?\n                Memes.length>0&&!Last?\n                <div style={{display:'flex',justifyContent:'center'}}>\n                <button className=\"btn btn-primary\" onClick={()=>setLimit(Limit+100)}>\n                    {Fetching?'Loading..':'Load More'}\n                </button>\n                </div>\n            :null\n            :null\n            }\n            \n        </div>\n    </div>\n        )    \n}\n\nexport default Meme\n","import React from 'react'\n\nfunction Header() {\n    return (\n        <div className=\"header_wrapper\">\n            <p className=\"header_text text-center\">Xmeme-Cwod</p>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nfunction SwaggerButton() {\n    return (\n        <a href=\"https://ritikajain120600.pythonanywhere.com/swagger-ui/\">\n         <button className=\"swagger_link\">\n             Swagger UI\n         </button>\n        </a>\n    )\n}\n\nexport default SwaggerButton\n","import React ,{useState,useEffect}from 'react'\nimport './App.css'\nimport Meme from './Components/Meme'\nimport Header from './Components/Header'\nimport SwaggerButton from './Components/SwaggerButton'\nconst Backend_URL='https://ritikajain120600.pythonanywhere.com/'\n// const Backend_URL='http://localhost:8000/'\nfunction App() {\n  // Form field variables\n  const [Name,setName]=useState('')\n  const [Caption,setCaption]=useState('')\n  const [Image,setImage]=useState('')\n  const [Loading,setLoading]=useState(false)\n  const [Error,IsError]=useState(false)\n  const [Message,setMessage]=useState('')\n  // Function to upload memes\n  const UploadMeme=(e)=>{\n    e.preventDefault();\n    setLoading(true)\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var data = JSON.stringify({\"name\":Name,\"caption\":Caption,\"url\":Image});\n\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: data,\n        redirect: 'follow'\n      };\n\n      fetch(`${Backend_URL}memes`, requestOptions)\n        .then(response => response.json())\n        .then(result => {\n          console.log(result)\n            setMessage('Uploaded Meme Successfully !!')\n            setName('')\n            setCaption('')\n            setImage('')\n          \n          setLoading(false)\n        })\n        .catch(error => console.log('error', error));\n  }\n  useEffect(()=>{\n    setTimeout(()=>{\n      setMessage('')\n    },2000)\n  },[Error,Loading])\n    return (\n    <div className=\"container-fluid\">\n      <Header/>\n      <br/>\n        <div>\n          <h3 style={{overflow:'hidden',color:'#fff'}}>&nbsp;&nbsp;&nbsp;Upload Meme</h3>\n        <form  className=\"meme_form\" onSubmit={UploadMeme}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"form-label labelHeading\" name=\"name\">Meme Owner</label>\n            <input for = \"name\" type=\"text\" placeholder=\"Enter your full name\"className=\"form-control\" id=\"name\" required value={Name} onChange={(e)=>setName(e.target.value)}/>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"caption\" className=\"form-label labelHeading\" name=\"caption\">Caption</label>\n            <input for=\"caption\" type=\"text\" placeholder=\"Be creative with the caption\"className=\"form-control\" id=\"caption\"  required value={Caption} onChange={(e)=>setCaption(e.target.value)}/>\n          </div>\n          <label htmlFor=\"meme_url\" className=\"form-label labelHeading\" name=\"url\">Meme URL</label>\n          <div className=\"input-group mb-3\">\n            <input for =\"url\" type=\"text\" placeholder=\"Enter URL of your meme here\" className=\"form-control \" id=\"meme_url\"  required value={Image} onChange={(e)=>setImage(e.target.value)}/>\n            <div className=\"input-group-append\">\n            <button type=\"submit\" className=\"btn btn-success\">{Loading?'Loading...':'Submit Meme'}</button>\n            </div>\n          </div>\n          <span style={Error?{color:'red'}:{color:'green'}}>{Message}</span>\n        </form>\n        </div>\n      <hr/>\n        <div>\n          <Meme Loading={Loading}/>\n        </div>\n      <SwaggerButton/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}